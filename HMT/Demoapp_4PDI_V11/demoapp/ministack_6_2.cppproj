<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>6.2</ProjectVersion>
    <ToolchainName>com.Atmel.AVRGCC8.CPP</ToolchainName>
    <ProjectGuid>{f109023d-8ba5-4145-9697-61e7ddd780dd}</ProjectGuid>
    <avrdevice>ATmega328P</avrdevice>
    <avrdeviceseries>none</avrdeviceseries>
    <OutputType>Executable</OutputType>
    <Language>CPP</Language>
    <OutputFileName>$(MSBuildProjectName)</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <OutputDirectory>$(MSBuildProjectDirectory)\$(Configuration)</OutputDirectory>
    <AssemblyName>ministack</AssemblyName>
    <Name>ministack</Name>
    <RootNamespace>ministack</RootNamespace>
    <ToolchainFlavour>Native</ToolchainFlavour>
    <KeepTimersRunning>true</KeepTimersRunning>
    <OverrideVtor>false</OverrideVtor>
    <OverrideVtorValue />
    <eraseonlaunchrule>0</eraseonlaunchrule>
    <avrtoolinterface>debugWIRE</avrtoolinterface>
    <avrtool>com.atmel.avrdbg.tool.jtagicemkii</avrtool>
    <com_atmel_avrdbg_tool_jtagicemkii>
      <ToolType xmlns="">com.atmel.avrdbg.tool.jtagicemkii</ToolType>
      <ToolName xmlns="">JTAGICE mkII</ToolName>
      <ToolNumber xmlns="">070000001297</ToolNumber>
      <KeepTimersRunning xmlns="">true</KeepTimersRunning>
      <OverrideVtor xmlns="">false</OverrideVtor>
      <OverrideVtorValue xmlns="">
      </OverrideVtorValue>
      <Channel xmlns="">
        <host>127.0.0.1</host>
        <port>1228</port>
        <ssl>False</ssl>
      </Channel>
      <ToolOptions xmlns="">
        <InterfaceName>debugWIRE</InterfaceName>
        <InterfaceProperties>
          <JtagDbgClock>200000</JtagDbgClock>
          <JtagProgClock>1000000</JtagProgClock>
          <IspClock>150000</IspClock>
          <JtagInChain>false</JtagInChain>
          <JtagEnableExtResetOnStartSession>false</JtagEnableExtResetOnStartSession>
          <JtagDevicesBefore>0</JtagDevicesBefore>
          <JtagDevicesAfter>0</JtagDevicesAfter>
          <JtagInstrBitsBefore>0</JtagInstrBitsBefore>
          <JtagInstrBitsAfter>0</JtagInstrBitsAfter>
        </InterfaceProperties>
      </ToolOptions>
    </com_atmel_avrdbg_tool_jtagicemkii>
    <CacheFlash>true</CacheFlash>
    <ProgFlashFromRam>true</ProgFlashFromRam>
    <RamSnippetAddress />
    <UncachedRange />
    <BootSegment>2</BootSegment>
    <AsfFrameworkConfig>
      <framework-data xmlns="">
        <options />
        <configurations />
        <files />
        <documentation help="" />
        <offline-documentation help="" />
        <dependencies>
          <content-extension eid="atmel.asf" uuidref="Atmel.ASF" version="3.11.0" />
        </dependencies>
      </framework-data>
    </AsfFrameworkConfig>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'MultiByte' ">
    <OutputPath>bin\MULTI_BYTE\</OutputPath>
    <ToolchainSettings>
      <AvrGccCpp>
  <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
  <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
  <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
  <avrgcc.common.outputfiles.srec>True</avrgcc.common.outputfiles.srec>
  <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
  <avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>
  <avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>
  <avrgcccpp.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>__STDC_LIMIT_MACROS</Value>
      <Value>__STDC_CONSTANT_MACROS</Value>
      <Value>USE_HMT7742</Value>
      <Value>F_CPU=8000000UL</Value>
      <Value>STACK_MODE_MULTI_BYTE</Value>
    </ListValues>
  </avrgcccpp.compiler.symbols.DefSymbols>
  <avrgcccpp.compiler.directories.IncludePaths>
    <ListValues>
      <Value>..\..\stack</Value>
    </ListValues>
  </avrgcccpp.compiler.directories.IncludePaths>
  <avrgcccpp.compiler.optimization.level>Optimize for size (-Os)</avrgcccpp.compiler.optimization.level>
  <avrgcccpp.compiler.optimization.OtherFlags>-fdata-sections -fno-move-loop-invariants</avrgcccpp.compiler.optimization.OtherFlags>
  <avrgcccpp.compiler.optimization.PackStructureMembers>True</avrgcccpp.compiler.optimization.PackStructureMembers>
  <avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>
  <avrgcccpp.compiler.miscellaneous.OtherFlags>-gdwarf-2 -fno-exceptions -fno-threadsafe-statics -std=c++0x</avrgcccpp.compiler.miscellaneous.OtherFlags>
  <avrgcccpp.linker.miscellaneous.LinkerFlags>-Wl,-relax</avrgcccpp.linker.miscellaneous.LinkerFlags>
</AvrGccCpp>
    </ToolchainSettings>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'SingleByte' ">
    <OutputPath>bin\SingleByte\</OutputPath>
    <ToolchainSettings>
      <AvrGccCpp xmlns="">
        <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
        <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
        <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
        <avrgcc.common.outputfiles.srec>True</avrgcc.common.outputfiles.srec>
        <avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>
        <avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>
        <avrgcccpp.compiler.symbols.DefSymbols>
          <ListValues>
            <Value>__STDC_LIMIT_MACROS</Value>
            <Value>__STDC_CONSTANT_MACROS</Value>
            <Value>F_CPU=8000000UL</Value>
            <Value>USE_HMT7742</Value>
            <Value>STACK_MODE_SINGLE_BYTE</Value>
          </ListValues>
        </avrgcccpp.compiler.symbols.DefSymbols>
        <avrgcccpp.compiler.directories.IncludePaths>
          <ListValues>
            <Value>..\..\stack</Value>
          </ListValues>
        </avrgcccpp.compiler.directories.IncludePaths>
        <avrgcccpp.compiler.optimization.level>Optimize for size (-Os)</avrgcccpp.compiler.optimization.level>
        <avrgcccpp.compiler.optimization.OtherFlags>-fdata-sections -fno-move-loop-invariants</avrgcccpp.compiler.optimization.OtherFlags>
        <avrgcccpp.compiler.optimization.PackStructureMembers>True</avrgcccpp.compiler.optimization.PackStructureMembers>
        <avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>
        <avrgcccpp.compiler.miscellaneous.OtherFlags>-gdwarf-2 -fno-exceptions -fno-threadsafe-statics -std=c++0x</avrgcccpp.compiler.miscellaneous.OtherFlags>
        <avrgcccpp.linker.memorysettings.Comment>&lt;segmentname&gt;=&lt;address&gt;, for example  .boot=0xff</avrgcccpp.linker.memorysettings.Comment>
        <avrgcccpp.linker.miscellaneous.LinkerFlags>-Wl,-relax</avrgcccpp.linker.miscellaneous.LinkerFlags>
      </AvrGccCpp>
    </ToolchainSettings>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Transparent' ">
    <OutputPath>bin\Transparent\</OutputPath>
    <ToolchainSettings>
      <AvrGccCpp>
        <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
        <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
        <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
        <avrgcc.common.outputfiles.srec>True</avrgcc.common.outputfiles.srec>
        <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
        <avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>
        <avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>
        <avrgcccpp.compiler.symbols.DefSymbols>
          <ListValues>
            <Value>__STDC_LIMIT_MACROS</Value>
            <Value>__STDC_CONSTANT_MACROS</Value>
            <Value>F_CPU=18432000UL</Value>
            <Value>USE_HMT7748</Value>
            <Value>STACK_MODE_TRANSPARENT</Value>
            <Value>USE_EXT_OSC</Value>
          </ListValues>
        </avrgcccpp.compiler.symbols.DefSymbols>
        <avrgcccpp.compiler.directories.IncludePaths>
          <ListValues>
            <Value>..\..\stack</Value>
          </ListValues>
        </avrgcccpp.compiler.directories.IncludePaths>
        <avrgcccpp.compiler.optimization.level>Optimize for size (-Os)</avrgcccpp.compiler.optimization.level>
        <avrgcccpp.compiler.optimization.OtherFlags>-fdata-sections -fno-move-loop-invariants</avrgcccpp.compiler.optimization.OtherFlags>
        <avrgcccpp.compiler.optimization.PackStructureMembers>True</avrgcccpp.compiler.optimization.PackStructureMembers>
        <avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>
        <avrgcccpp.compiler.miscellaneous.OtherFlags>-gdwarf-2 -fno-exceptions -fno-threadsafe-statics -std=c++0x</avrgcccpp.compiler.miscellaneous.OtherFlags>
        <avrgcccpp.linker.miscellaneous.LinkerFlags>-Wl,-relax</avrgcccpp.linker.miscellaneous.LinkerFlags>
      </AvrGccCpp>
    </ToolchainSettings>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\stack\stackmultibyte.cpp">
      <SubType>compile</SubType>
      <Link>stackmultibyte.cpp</Link>
    </Compile>
    <Compile Include="..\stack\stacksinglebyte.cpp">
      <SubType>compile</SubType>
      <Link>stacksinglebyte.cpp</Link>
    </Compile>
    <Compile Include="..\stack\stacktransparent.cpp">
      <SubType>compile</SubType>
      <Link>stacktransparent.cpp</Link>
    </Compile>
    <Compile Include="demoapp.cpp">
      <SubType>compile</SubType>
      <Link>demoapp.cpp</Link>
    </Compile>
    <Compile Include="main.cpp">
      <SubType>compile</SubType>
      <Link>main.cpp</Link>
    </Compile>
  </ItemGroup>
  <Import Project="$(AVRSTUDIO_EXE_PATH)\\Vs\\Compiler.targets" />
</Project>